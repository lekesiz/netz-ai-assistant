# NETZ AI Production Environment Configuration
# ==================================================

# Domain Configuration
DOMAIN=netzinformatique.fr

# Database Configuration
DATABASE_URL=postgresql://netzai_user:${POSTGRES_PASSWORD}@postgres:5432/netzai_prod
POSTGRES_DB=netzai_prod
POSTGRES_USER=netzai_user
POSTGRES_PASSWORD=CHANGE_ME_IN_PRODUCTION

# Redis Configuration
REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
REDIS_PASSWORD=CHANGE_ME_IN_PRODUCTION

# API Keys (Keep these secure!)
PENNYLANE_API_KEY=YOUR_PENNYLANE_API_KEY_HERE
PENNYLANE_COMPANY_ID=YOUR_COMPANY_ID_HERE
OPENAI_API_KEY=YOUR_OPENAI_API_KEY_HERE
GEMINI_API_KEY=YOUR_GEMINI_API_KEY_HERE

# Security Keys (MUST change in production!)
SECRET_KEY=CHANGE_ME_PRODUCTION_SECRET_KEY_VERY_LONG_AND_RANDOM
JWT_SECRET_KEY=CHANGE_ME_JWT_SECRET_KEY_ALSO_VERY_LONG_AND_RANDOM

# Service URLs (Internal Docker network)
OLLAMA_BASE_URL=http://ollama:11434
QDRANT_URL=http://qdrant:6333

# External URLs
NEXT_PUBLIC_API_URL=https://netzinformatique.fr/api

# Environment
ENVIRONMENT=production
DEBUG=False
NODE_ENV=production

# Backup Configuration
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM

# Monitoring
PROMETHEUS_ENABLED=true
HEALTHCHECK_INTERVAL=30s

# SSL/TLS
ENABLE_SSL=true
SSL_CERT_EMAIL=admin@netzinformatique.fr

# Performance Settings
WORKERS=4
MAX_REQUESTS=1000
TIMEOUT=120

# NETZ Specific Configuration
COMPANY_NAME=NETZ Informatique
COMPANY_DOMAIN=netzinformatique.fr
COMPANY_EMAIL=contact@netzinformatique.fr
COMPANY_PHONE=+33 7 67 74 49 03

# Feature Flags
ENABLE_CACHE=true
CACHE_TTL_MINUTES=30
ENABLE_RATE_LIMITING=true
ENABLE_MONITORING=true
ENABLE_BACKUP=true

# Logging
LOG_LEVEL=INFO
LOG_FORMAT=json
ENABLE_ACCESS_LOGS=true

# IMPORTANT SECURITY NOTES:
# ========================
# 1. Change all passwords marked with CHANGE_ME
# 2. Use a secrets manager in production (AWS Secrets Manager, HashiCorp Vault)
# 3. Never commit real API keys to version control
# 4. Use environment-specific configurations
# 5. Enable monitoring and alerting
# 6. Regularly rotate API keys and passwords
# 7. Use SSL/TLS everywhere
# 8. Keep dependencies updated
# 9. Monitor for security vulnerabilities
# 10. Implement proper backup and disaster recovery