worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time';

    access_log /var/log/nginx/access.log main;

    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml application/atom+xml image/svg+xml;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=30r/m;
    limit_req_zone $binary_remote_addr zone=login_limit:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=general_limit:10m rate=60r/m;
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Upstream configuration
    upstream netz_api {
        least_conn;
        server netz-api:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # SSL configuration (shared)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.netzinformatique.fr" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name netzinformatique.fr www.netzinformatique.fr api.netzinformatique.fr;
        
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS API server
    server {
        listen 443 ssl http2;
        server_name api.netzinformatique.fr;

        ssl_certificate /etc/nginx/ssl/netzinformatique.crt;
        ssl_certificate_key /etc/nginx/ssl/netzinformatique.key;

        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # API endpoints
        location /api {
            # Rate limiting
            limit_req zone=general_limit burst=20 nodelay;
            limit_conn addr 10;
            
            # Specific endpoint rate limits
            location /api/security/login {
                limit_req zone=login_limit burst=2 nodelay;
                proxy_pass http://netz_api;
                include /etc/nginx/proxy_params;
            }
            
            location /api/chat {
                limit_req zone=api_limit burst=10 nodelay;
                proxy_pass http://netz_api;
                include /etc/nginx/proxy_params;
            }
            
            proxy_pass http://netz_api;
            include /etc/nginx/proxy_params;
        }

        # Health check endpoints (no rate limiting)
        location /health {
            proxy_pass http://netz_api/health;
            access_log off;
            include /etc/nginx/proxy_params;
        }

        location /ready {
            proxy_pass http://netz_api/ready;
            access_log off;
            include /etc/nginx/proxy_params;
        }

        # Metrics endpoint (restricted access)
        location /metrics {
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            
            proxy_pass http://netz_api:9090/metrics;
            include /etc/nginx/proxy_params;
        }

        # Admin endpoints (restricted access)
        location /api/security {
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            # Add your office/admin IPs here
            # allow YOUR.OFFICE.IP.ADDRESS;
            deny all;
            
            proxy_pass http://netz_api;
            include /etc/nginx/proxy_params;
        }

        # WebSocket support (if needed)
        location /ws {
            proxy_pass http://netz_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
        }
    }

    # Main website (optional, if API is on subdomain)
    server {
        listen 443 ssl http2;
        server_name netzinformatique.fr www.netzinformatique.fr;

        ssl_certificate /etc/nginx/ssl/netzinformatique.crt;
        ssl_certificate_key /etc/nginx/ssl/netzinformatique.key;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        root /var/www/html;
        index index.html;

        location / {
            try_files $uri $uri/ =404;
        }

        # API proxy on main domain
        location /api {
            limit_req zone=general_limit burst=20 nodelay;
            proxy_pass http://netz_api;
            include /etc/nginx/proxy_params;
        }
    }
}

# Proxy parameters file content (save as proxy_params)
# proxy_set_header Host $http_host;
# proxy_set_header X-Real-IP $remote_addr;
# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# proxy_set_header X-Forwarded-Proto $scheme;
# proxy_connect_timeout 300;
# proxy_send_timeout 300;
# proxy_read_timeout 300;
# proxy_buffering off;
# proxy_request_buffering off;
# proxy_http_version 1.1;
# proxy_set_header Connection "";
# client_max_body_size 10M;